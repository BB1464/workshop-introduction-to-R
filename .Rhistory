axis.text.x = element_text(family = "lato", size = 22, colour = "#5b868d"))
ggplot(data = plot_df,
mapping = aes(x = date, y = value, fill = fill)) +
geom_stream(bw = 0.9) +
# undergrad
geom_errorbar(aes(y = 0.3, xmin = 2010.25, xmax = 2015.5), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2015.8, y = 0.45, label = "Bsc (Soil Science)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# mres
geom_errorbar(aes(y = -0.5, xmin = 2019.75, xmax = 2022.75), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2019.25, y = -0.7, label = "MSc (Agrometeorology)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# phd
geom_errorbar(aes(y = -0.5, xmin = 2022.75, xmax = 2023.5), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2022.25, y = -0.7, label = "PhD (Soil Science)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# jr
geom_errorbar(aes(y = 0.7, xmin = 2019.8, xmax = 2023.70), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2019.8, y = 0.95, label = "CocoaSoils (IITA)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
labs(x = "", y = "") +
scale_fill_identity() +
scale_x_continuous(breaks = seq(2010,2023,2),
limits = c(2010, 2023)) +
scale_y_continuous(limits = c(-1.1, 1.1)) +
theme_minimal() +
theme(legend.position = "none",
plot.background = element_rect(colour = "#dae5e7", fill = "#dae5e7"),
panel.background = element_rect(colour = "#dae5e7", fill = "#dae5e7"),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(family = "lato", size = 22, colour = "#5b868d"))
ggplot(data = plot_df,
mapping = aes(x = date, y = value, fill = fill)) +
geom_stream(bw = 0.9) +
# undergrad
geom_errorbar(aes(y = 0.3, xmin = 2010.25, xmax = 2015.5), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2015.8, y = 0.45, label = "Bsc (Soil Science)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# mres
geom_errorbar(aes(y = -0.5, xmin = 2019.75, xmax = 2022.75), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2018.25, y = -0.7, label = "MSc (Agrometeorology)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# phd
geom_errorbar(aes(y = -0.5, xmin = 2022.75, xmax = 2023.5), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2022.25, y = -0.7, label = "PhD (Soil Science)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# jr
geom_errorbar(aes(y = 0.7, xmin = 2019.8, xmax = 2023.70), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2019.8, y = 0.95, label = "CocoaSoils (IITA)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
labs(x = "", y = "") +
scale_fill_identity() +
scale_x_continuous(breaks = seq(2010,2023,2),
limits = c(2010, 2023)) +
scale_y_continuous(limits = c(-1.1, 1.1)) +
theme_minimal() +
theme(legend.position = "none",
plot.background = element_rect(colour = "#dae5e7", fill = "#dae5e7"),
panel.background = element_rect(colour = "#dae5e7", fill = "#dae5e7"),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(family = "lato", size = 22, colour = "#5b868d"))
ggplot(data = plot_df,
mapping = aes(x = date, y = value, fill = fill)) +
geom_stream(bw = 0.9) +
# undergrad
geom_errorbar(aes(y = 0.3, xmin = 2010.25, xmax = 2015.5), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2015.8, y = 0.45, label = "Bsc (Soil Science)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# mres
geom_errorbar(aes(y = -0.5, xmin = 2019.75, xmax = 2022.75), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2018.25, y = -0.7, label = "MSc (Agrometeorology)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# phd
geom_errorbar(aes(y = -0.5, xmin = 2022.75, xmax = 2023.5), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2023.25, y = -0.7, label = "PhD (Soil Science)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# jr
geom_errorbar(aes(y = 0.7, xmin = 2019.8, xmax = 2023.70), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2019.8, y = 0.95, label = "CocoaSoils (IITA)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
labs(x = "", y = "") +
scale_fill_identity() +
scale_x_continuous(breaks = seq(2010,2023,2),
limits = c(2010, 2023)) +
scale_y_continuous(limits = c(-1.1, 1.1)) +
theme_minimal() +
theme(legend.position = "none",
plot.background = element_rect(colour = "#dae5e7", fill = "#dae5e7"),
panel.background = element_rect(colour = "#dae5e7", fill = "#dae5e7"),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(family = "lato", size = 22, colour = "#5b868d"))
ggplot(data = plot_df,
mapping = aes(x = date, y = value, fill = fill)) +
geom_stream(bw = 0.9) +
# undergrad
geom_errorbar(aes(y = 0.3, xmin = 2010.25, xmax = 2015.5), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2015.8, y = 0.45, label = "Bsc (Soil Science)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# mres
geom_errorbar(aes(y = -0.5, xmin = 2019.75, xmax = 2022.75), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2018.25, y = -0.7, label = "MSc (Agrometeorology)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# phd
geom_errorbar(aes(y = -0.5, xmin = 2022.75, xmax = 2022.5), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2023.25, y = -0.7, label = "PhD (Soil Science)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# jr
geom_errorbar(aes(y = 0.7, xmin = 2019.8, xmax = 2023.70), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2019.8, y = 0.95, label = "CocoaSoils (IITA)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
labs(x = "", y = "") +
scale_fill_identity() +
scale_x_continuous(breaks = seq(2010,2023,2),
limits = c(2010, 2023)) +
scale_y_continuous(limits = c(-1.1, 1.1)) +
theme_minimal() +
theme(legend.position = "none",
plot.background = element_rect(colour = "#dae5e7", fill = "#dae5e7"),
panel.background = element_rect(colour = "#dae5e7", fill = "#dae5e7"),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(family = "lato", size = 22, colour = "#5b868d"))
ggplot(data = plot_df,
mapping = aes(x = date, y = value, fill = fill)) +
geom_stream(bw = 0.9) +
# undergrad
geom_errorbar(aes(y = 0.3, xmin = 2010.25, xmax = 2015.5), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2015.8, y = 0.45, label = "Bsc (Soil Science)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# mres
geom_errorbar(aes(y = -0.5, xmin = 2019.75, xmax = 2022.75), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2018.25, y = -0.7, label = "MSc (Agrometeorology)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# phd
geom_errorbar(aes(y = -0.5, xmin = 2022.75, xmax = 2023.5), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2022.25, y = -0.7, label = "PhD (Soil Science)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# jr
geom_errorbar(aes(y = 0.7, xmin = 2019.8, xmax = 2023.70), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2019.8, y = 0.95, label = "CocoaSoils (IITA)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
labs(x = "", y = "") +
scale_fill_identity() +
scale_x_continuous(breaks = seq(2010,2023,2),
limits = c(2010, 2023)) +
scale_y_continuous(limits = c(-1.1, 1.1)) +
theme_minimal() +
theme(legend.position = "none",
plot.background = element_rect(colour = "#dae5e7", fill = "#dae5e7"),
panel.background = element_rect(colour = "#dae5e7", fill = "#dae5e7"),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(family = "lato", size = 22, colour = "#5b868d"))
ggplot(data = plot_df,
mapping = aes(x = date, y = value, fill = fill)) +
geom_stream(bw = 0.9) +
# undergrad
#geom_errorbar(aes(y = 0.3, xmin = 2010.25, xmax = 2015.5), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2015.8, y = 0.45, label = "Bsc (Soil Science)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# mres
geom_errorbar(aes(y = -0.5, xmin = 2019.75, xmax = 2022.75), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2018.25, y = -0.7, label = "MSc (Agrometeorology)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# phd
#geom_errorbar(aes(y = -0.5, xmin = 2022.75, xmax = 2023.5), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2022.25, y = -0.7, label = "PhD (Soil Science)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# jr
#geom_errorbar(aes(y = 0.7, xmin = 2019.8, xmax = 2023.70), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2019.8, y = 0.95, label = "CocoaSoils (IITA)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
labs(x = "", y = "") +
scale_fill_identity() +
scale_x_continuous(breaks = seq(2010,2023,2),
limits = c(2010, 2023)) +
scale_y_continuous(limits = c(-1.1, 1.1)) +
theme_minimal() +
theme(legend.position = "none",
plot.background = element_rect(colour = "#dae5e7", fill = "#dae5e7"),
panel.background = element_rect(colour = "#dae5e7", fill = "#dae5e7"),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(family = "lato", size = 22, colour = "#5b868d"))
ggplot(data = plot_df,
mapping = aes(x = date, y = value, fill = fill)) +
geom_stream(bw = 0.9) +
# undergrad
#geom_errorbar(aes(y = 0.3, xmin = 2010.25, xmax = 2015.5), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2015.8, y = 0.45, label = "Bsc (Soil Science)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# mres
#geom_errorbar(aes(y = -0.5, xmin = 2019.75, xmax = 2022.75), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2018.25, y = -0.7, label = "MSc (Agrometeorology)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# phd
#geom_errorbar(aes(y = -0.5, xmin = 2022.75, xmax = 2023.5), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2022.25, y = -0.7, label = "PhD (Soil Science)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
# jr
#geom_errorbar(aes(y = 0.7, xmin = 2019.8, xmax = 2023.70), width = 0.1, colour = "#12a79d") +
annotate("text", x = 2019.8, y = 0.95, label = "CocoaSoils (IITA)",
hjust = 0.5, family = "lato", size = 8, lineheight = 0.4, colour = "#5b868d") +
labs(x = "", y = "") +
scale_fill_identity() +
scale_x_continuous(breaks = seq(2010,2023,2),
limits = c(2010, 2023)) +
scale_y_continuous(limits = c(-1.1, 1.1)) +
theme_minimal() +
theme(legend.position = "none",
plot.background = element_rect(colour = "#dae5e7", fill = "#dae5e7"),
panel.background = element_rect(colour = "#dae5e7", fill = "#dae5e7"),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(family = "lato", size = 22, colour = "#5b868d"))
library(tidymodels)
library(palmerpenguins)
data("penguins")
colSums(is.na(penguins))
penguins_rec <- recipe(sex~.,data=penguins) %>% step_impute_knn()
penguins_rec <- recipe(sex~.,data=penguins) %>% step_impute_knn(all_outcomes())
penguins_rec <- recipe(sex~.,data=penguins) %>% step_impute_knn(all_predictors())
penguins_rec %>% prep()
penguins_rec %>% prep() %>% bake(new_data = NULL)
dat <- penguins_rec %>% prep() %>% bake(new_data = NULL)
colSums(is.na(dat))
penguins_rec <- recipe(sex~.,data=penguins) %>% step_impute_knn(all_predictors(),sex)
colSums(is.na(dat))
dat <- penguins_rec %>% prep() %>% bake(new_data = NULL)
colSums(is.na(dat))
View(dat)
lm(body_mass_g~.,data=dat)
mod <- lm(body_mass_g~.,data=dat)
anova(mod)
Sys.Date
Sys.Date()
library(tidymodels)
?step_YeoJohnson()
dat <- agridat::omer.sorghum
write.csv(x = dat,file = here::here('data/sorghum.csv'))
writexl::write_xlsx(x = dat,path = here::here('data/sorghum.xlsx'))
write.csv(x = dat,file = here::here('data/sorghum.csv'),row.names = FALSE)
View(dat)
head(dat)
library(tidyverse)
iris %>% filter(Species %in%c('setosa','virginica'))
mtcars$gear
write.csv(x = mtcars,file = here::here('data/mtcars.csv'),row.names = F)
head(dat)
head(mtcars)
head(arrange(mtcars, mpg),10)
mtcars %>%
mutate(mpg_trans=log10(mpg)) %>%
head(10)
summarize(mtcars, mpg_mean = mean(mpg, na.rm = TRUE))
by_treatment <- group_by(sorghum, env)
write.csv(x = iris,file = here::here('data/iris.csv'))
write.csv(x = iris,file = here::here('data/iris.csv'),row.names = F)
library(metrica)
install.packages("metrica")
library(metrica)
browseVignettes("metrica")
head(dat,1)
library(tidyverse)
library(metrica)
head(mtcars,1)
scatter_plot(data = mtcars,obs = mpg,pred = disp)
scatter_plot(data = mtcars,obs = mpg,pred = mpg)
scatter_plot(data = mtcars,obs = mpg,pred =hp)
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = c('R2','RMSE'))
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = c('R2','RMSE'),position_metrics = c(x=120,y=170))
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = c('R2','RMSE'),position_metrics = c(x=12,y=17))
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = c('R2','RMSE'),position_metrics = c(x=200,y=170))
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = c('R2','RMSE'),position_metrics = c(x=200,y=170),position_eq = c(x=100,y=150))
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = c('R2','RMSE'),position_metrics = c(x=200,y=170),position_eq = c(x=100,y=150),regline_size = 5)
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = c('R2','RMSE'),position_metrics = c(x=2,y=170),position_eq = c(x=100,y=150),regline_size = 5)
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = c('R2','RMSE'),position_metrics = c(x=50,y=170),position_eq = c(x=100,y=150),regline_size = 5)
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = c('R2','RMSE'),position_metrics = c(x=50,y=170),position_eq = c(x=100,y=150),regline_size = 5)+scale_x_log10()
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = c('R2','RMSE'),position_metrics = c(x=50,y=170),position_eq = c(x=100,y=150),regline_size = 5)+scale_y_log10()
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = c('R2','RMSE'),position_metrics = c(x=50,y=170),position_eq = c(x=100,y=150),regline_size = 5)+scale_x_sqrt()
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = c('R2','RMSE'),position_metrics = c(x=50,y=170),position_eq = c(x=100,y=150),regline_size = 5)
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = c('R2','RMSE'),position_metrics = c(x=250,y=170),position_eq = c(x=100,y=150),regline_size = 5)
set_metric <- metrics_summary(metrics_list = c('RMSE','R2'))
set_metric <- c('RMSE','R2')
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = set_metric,position_metrics = c(x=250,y=170),position_eq = c(x=100,y=150),regline_size = 5)
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = set_metric,position_metrics = c(x=250,y=120),position_eq = c(x=100,y=150),regline_size = 5)
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = set_metric,position_metrics = c(x=250,y=100),position_eq = c(x=100,y=150),regline_size = 5)
scatter_plot(data = mtcars,obs = mpg,pred =hp,metrics_list = set_metric,position_metrics = c(x=5,y=7),position_eq = c(x=100,y=150),regline_size = 5)
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=150),regline_size = 5)
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=150),regline_size = 5,print_metrics = TRUE)
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=150),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric)
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=150),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170))
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=250),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170))
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=250),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170),orientation = "PO)
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=250),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170),orientation = "PO")
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=250),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170),orientation = "OP")
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=250),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170),orientation = "PO")
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=250),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170),orientation = "PO",print_eq = TRUE)
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=250),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170),orientation = "PO",print_eq = TRUE,shape_type = 20)
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=250),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170),orientation = "PO",print_eq = TRUE,shape_type = 21)
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=250),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170),orientation = "PO",print_eq = TRUE,shape_type = 21,shape_size = 5)
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=250),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170),orientation = "PO",print_eq = TRUE,shape_type = 21,shape_size = 5,eq_color = 'blue')
scatter_plot(data = iris,obs = Sepal.Length,pred =Sepal.Width,position_eq = c(x=100,y=250),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170),orientation = "PO",print_eq = TRUE,shape_type = 21,shape_size = 5,eq_color = 'blue')
set_metric <- c('RMSE','R2')
scatter_plot(data = iris,obs = Sepal.Length,pred =Sepal.Width,position_eq = c(x=100,y=250),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170),orientation = "PO",print_eq = TRUE,shape_type = 21,shape_size = 5,eq_color = 'blue')
set_metric <- c('RMSE','R2')
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=250),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170),orientation = "PO",print_eq = TRUE,shape_type = 21,shape_size = 5,eq_color = 'blue')
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=250),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170),orientation = "PO",print_eq = TRUE,shape_type = 21,shape_size = 5,eq_color = 'blue')+scale_y_log10()
scatter_plot(data = mtcars,obs = mpg,pred =hp,position_eq = c(x=100,y=250),regline_size = 5,print_metrics = TRUE,metrics_list = set_metric,position_metrics = c(x=250,y=170),orientation = "PO",print_eq = TRUE,shape_type = 21,shape_size = 5,eq_color = 'blue')
library(tidymodels)
decision_tree()
linear_reg()
logistic_reg()
boost_tree()
iris %>% gsub('e','',Species)
iris %>% gsub('e','',iris)
iris$Species %>% gsub('e','',iris)
iris$Species %>% gsub('e','',iris$Species)
?gsub
t1 <- c('0 kg P','37.5 kg P','75 kg P')
t2 <- c('TME419','TMS581')
plan4 <- agricolae::design.split(trt1 = t1,trt2 = t2,r = 4,seed = 123)
plan4$book
phosphorus <- c('0 kg P','37.5 kg P','75 kg P')
varieties <- c('TME419','TMS581')
plan4 <- agricolae::design.split(phosphorus = t1,trt2 = varieties,r = 4,seed = 123)
plan4 <- agricolae::design.split(t1=phosphorus ,trt2 = varieties,r = 4,seed = 123)
plan4 <- agricolae::design.split(trt1 = phosphorus,trt2 = varieties,r = 4,seed = 123)
plan4$book
factor(phosphorus)
varieties <- factor(varieties,levels = c('TME419','TMS581'))
phosphorus <- factor(phosphorus,levels = c('0 kg P','37.5 kg P','75 kg P'))
plan4 <- design.split(trt1 = phosphorus,trt2 = varieties,r = 4,seed = 123)
library(agricolae)
plan4 <- design.split(trt1 = phosphorus,trt2 = varieties,r = 4,seed = 123)
plan4 <- plan4$book
View(plan4)
plan4
plan4 <- design.split(trt1 = phosphorus,trt2 = varieties,r = 4,seed = 123)
plan4$book
plan4 <- plan4$book
View(plan4)
phosphorus <- c('0 kg P','37.5 kg P','75 kg P')
phosphorus <- factor(phosphorus,levels = c('0 kg P','37.5 kg P','75 kg P'))
varieties <- c('TME419','TMS581')
varieties <- factor(varieties,levels = c('TME419','TMS581'))
plan4 <- design.split(trt1 = phosphorus,trt2 = varieties,r = 4,seed = 123)
plan4 <- plan4$book
View(plan4)
?design.alpha()
trt <- 1:30 # Treatment
t <- length(trt)
t
30/3
?design.lsd()
varieties<-c("perricholi","yungay","maria bonita","tomasa")
outdesign <-design.lsd(varieties,serie=2,seed=23)
lsd <- outdesign$book
print(outdesign$sketch)
plots <-as.numeric(lsd[,1])
print(matrix(plots,byrow = TRUE, ncol = 4))
library(tidyverse)
library(agridat)
library(factoextra)
data(steptoe.morex.pheno)
dat <- steptoe.morex.pheno
dat <- as_tibble(dat)
dat
summary(dat)
levels(dat$env)
#Let's consider only one env - "ID91"
dat.ID91 <- dat %>%
filter(env=="ID91") %>%
droplevels()
dat.ID91
#lodging is missing for ALL genotype
summary(dat.ID91)
#Drop/Remove lodging
dat.ID91 <- dat.ID91 %>%
select(-lodging)
names(dat.ID91)
#Good practice
dat.ID91 <- na.omit(dat.ID91)
#Keep the names of the genotypes
dat.ID91.label <- dat.ID91$gen
#Remove/Delete gen & env column
dat.ID91$gen <- NULL
dat.ID91$env <- NULL
dat.ID91
#Standardize the data
dat.ID91.sc <- scale(dat.ID91)
summary(dat.ID91.sc)
#Distance metric
dist.ID91 <- dist(dat.ID91.sc, method = 'euclidean')
#Hierarchical Classification
hclust.ID91 <- hclust(dist.ID91, method = 'ward.D2')
#Visualize the dendrogram
plot(hclust.ID91)
#Add genotype labels
plot(hclust.ID91, hang = -1, labels = dat.ID91.label)
#Add boarder
rect.hclust(hclust.ID91, k = 3, border = "red")
#Visualize the clusters with colours
library(dendextend)
dend.ID91 <- as.dendrogram(hclust.ID91)
col.dend.ID91 <- color_branches(dend.ID91, k = 3)
#Visualize the clusters
plot(col.dend.ID91)
#Add genotype labels
labels(col.dend.ID91) <- dat.ID91.label
plot(col.dend.ID91)
fviz_dend(x = hclust.ID91,k = 3)
fviz_dend(x = hclust.ID91,k = 3,guide='none')
fviz_dend(x = hclust.ID91,k = 3,guide='none',label=dat.ID91.label)
fviz_dend(x = hclust.ID91,k = 3,guide='none',label='dat.ID91.label')
#Get cluster membership
cut.ID91 <- cutree(hclust.ID91, k = 3)
cut.ID91
#Add cluster membership to the original data
dat.ID91 <- dat.ID91 %>%
mutate(cluster = cut.ID91)
dat.ID91
#Aggregate the data by cluster membership
dat.ID91.summary <- dat.ID91 %>%
group_by(cluster) %>%
summarize(
m_amylase=mean(amylase, na.rm=TRUE),
m_diapow=mean(diapow, na.rm=TRUE),
m_hddate=mean(hddate, na.rm=TRUE),
m_malt=mean(malt, na.rm=TRUE),
m_height=mean(height, na.rm=TRUE),
m_protein=mean(protein, na.rm=TRUE),
m_yield=mean(yield, na.rm=TRUE),
N_Obs=n()
)
dat.ID91.summary
library(tidyverse)
iris %>% mutate(across(.cols=c(5),.fns=gsub('tos','',Species)))
vec <- c('123e','143e','145s')
str(vec)
gsub(pattern = 'es',replacement = '',x = vec)
gsub(pattern = 'e',replacement = '',x = vec)
gsub(pattern = 'e',replacement = '',x = vec,fixed = TRUE)
gsub(pattern = 'es',replacement = '',x = vec,fixed = TRUE)
gsub(pattern = 'es',replacement = '',x = vec,fixed = TRUE,ignore.case = FALSE)
str_replace(string = vec,pattern = 'es',replacement = '')
str_replace(string = vec,pattern = 'e',replacement = '')
str_replace_all(string = vec,pattern = 'e',replacement = '')
str_replace_all(string = vec,pattern = 'es',replacement = '')
str_replace_all(string = vec,pattern = 'e*s',replacement = '')
str_replace_all(string = vec,pattern = 's',replacement = '')
str_replace_all(string = vec,pattern = 's',replacement = '') %>% gsub('e',replacement = '',x = vec)
str(iris)
str(iris$Species)
iris$Species <- as.character(iris$Species)
str(iris$Species)
iris$Species <- gsub(pattern = 's',replacement = '',x = iris$Species)
head(iris$Species)
View(iris)
2023-2011
sqrt(200/2)
library(tidymodels)
lr_spec <- logistic_reg() %>%
set_engine("glm") %>%
set_mode("classification")
lr_fit <- lr_spec %>%
fit(
Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume,
data = Smarket
)
library(tidymodels)
library(ISLR) # For the Smarket data set
library(ISLR2) # For the Bikeshare data set
install.packages(c("ISLR", "ISLR2"))
library(tidymodels)
library(ISLR) # For the Smarket data set
library(ISLR2) # For the Bikeshare data set
library(discrim)
lr_fit <- lr_spec %>%
fit(
Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume,
data = Smarket
)
lr_fit
lr_fit %>%
pluck("fit") %>%
summary()
lr_fit %>%
pluck("fit") %>%
anova()
lm_spec <- linear_reg() %>%
set_mode("regression") %>%
set_engine("lm")
lm_fit <- lm_spec %>%
fit(medv ~ lstat, data = Boston)
lm_fit
lm_fit %>%
pluck("fit") %>%
summary()
lm_fit %>%
pluck("fit") %>%
anova()
