---
title: "Training on Statistics and Data Analysis using R"
author: "Oluwafemi Oyedele"
subtitle: "Post Graduate Students, CPEB Club, \nUniversity of Ibadan"
date: "2023-08-12"
footer:  "[Statistics and Data Analysis using R](https://github.com/BB1464/workshop-introduction-to-R)"
logo: "img/ui.jpg"
css: logo.css
format: 
   revealjs: 
    theme: [solarized, slides.scss]
    highlight-style: a11y
    transition: fade
    slide-number: true
    show-slide-number: all
    chalkboard: true
    code-annotations: hover
    #multiplex: true
    #slide-tone: false
    #auto-slide: 2000
    #loop: true
    #footer: https://bb1464.github.io/workshop-introduction-to-R/
editor: visual
execute:
  freeze: auto
---

**About me**

::: {.incremental}

::: columns
::: {.column width="60%"}

-   I am an Agrometeorologist and Crop Simulation modeler

-   I am a mentor of R4DS online learning community

-   I am also a active member of the TidyTuesday project

-   `r fontawesome::fa("linkedin")`: [Oluwafemi Oyedele](https://www.linkedin.com/in/oluwafemioyedele)

-   `r fontawesome::fa("twitter")`: [\@OluwafemOyedele](https://twitter.com/OluwafemOyedele) `r emoji::emoji("thumbsup")`

-   `r fontawesome::fa("github")` [github.com/BB1464](https://github.com/BB1464/workshop-introduction-to-R)

-  `r fontawesome::fa("globe")` [bb1464.github.io](https://bb1464.github.io/oluwafemi-oyedele/)
:::

::: {.column width="40%"}
![](img/pix.jpg){style="float:right;padding: 0 0 0 10px;" fig-alt="Headshot of Dr. Maria Tackett" width="300"}
:::
:::
:::

::: notes
-   A little bit about myself
:::



```{r}
library(fontawesome)
library(emoji)
```
# My R journey (so far) 
```{r,fig.align='center'}
knitr::include_graphics(path = here::here('img/RlearningPath.PNG'))
```
##
#### Learning Objectives

::: {.incremental}

- Installation of R and R Studio


- Introduction to R and R Studio.

- Data Import and Export

- Data summary (Simple Descriptive analysis) 

- Data wrangling

- Design of Experiment (CRD, RCBD, Latin Square Design, Split Plot Design and Alpha Latice Design).

- Linear regression

- Correlation

- Cluster analysis
:::

##
#### Learning Objectives Continued

::: {.incremental}
- PCA

- Data Visualization

- Communication (Report)
:::


## 

**What is R**

::: columns
::: {.column width="40%"}
![](img/rlogo.png){style="float:right;padding: 0 0 0 10px;" fig-alt="Headshot of Dr. Maria Tackett" width="500"}
:::
::: {.column width="60%"}
::: {.incremental}
-   A widely used programming language for data analysis

-   Based on statistical programming language S (1976)

-   Developed by Ross Ihaka & Robert Gentleman (1995)

-   Very active community, with many (often subject-specific) packages

-   Open source, and interoperable!
:::
:::
:::


## 

#### **If one already knows Stata or similar software, why use R?**
 
::: {.incremental}
- R is *free*, so you don't need a terminal server

- R has a *very* large community.

- R can handle virtually any data format.

- R makes replication easy.

:::
##

**What is R Studio**

::: columns
::: {.column width="40%"}
![](img/RStudio-Logo.png){style="float:right;padding: 0 0 0 10px;" fig-alt="Headshot of Dr. Maria Tackett" width="500"}
:::
::: {.column width="60%"}
::: {.incremental}
- Integrated Development Environment (IDE) for R that can make your life *easier*.

- Founded by J.J. Allaire, available since 2010

- Bloody useful! Let’s take a look: please open RStudio!
:::
:::
:::

##

#### **RStudio can:**
 
::: {.incremental}
- organize your code, output, and plots.

- Auto-complete code and highlight syntax.

- Help view data and objects.

- Enable easy integration of R code into documents.
:::
 
##

#### **Installation of R and R Studio**

- We can install R and RStudio from [https://posit.co/download/rstudio-desktop/](https://posit.co/download/rstudio-desktop/)

- Installation of R Packages


##

### R Studio Interface

::: {layout="[[-1], [1], [-1]]"}
![](img/rstudio-incremental.png){fig-align="center" width="800"}
:::


##

#### **Demonstration**

::: {.incremental}
- Demontration on the various tabs found in R and R Studio.
:::

##
#### Data Science Workflow in R by (Hadley Wickham)

![](img/data-science-workflow.png)

##
#### Data Import
```{r}
#| echo: true
#| code-line-numbers: "0|1|3|5|7"
#| eval: true


library(tidyverse) # data wrangling and cleaning

library(here)  # For Easy Navigation of file path

library(readxl) # To import excel file into R

library(skimr) # For summary statistics
```

::: {.incremental}
- To read in a csv file into R we will use `read_csv` 

- To read in an excel file into R we will use `read_excel`

- To write a csv file to disc we will use `write_csv`

- To write a excel file to disc we will use `write_xlsx` from `writexl package`
:::

##

::: {.panel-tabset}

### Data Import

```{r sorghum_dataset}
#| echo: true
#| code-line-numbers: "0|1"

sorghum<-read_csv(here::here('data/sorghum.csv')) 

# Congratulation you have successfully read a csv file into R and we assigned it to an object called sorghum
```
### Table 

```{r table}
#| echo: true
#| code-line-numbers: "0|1|2|3|4"

sorghum %>% 
  head(2)
sorghum %>% 
  tail(2)
#- Import sorghum.xlsx into RStudio
```
:::

##
#### Data Import Practicals

- Import sorghum.xlsx into RStudio and assigned it to an object called sorghnum_dat.

- View the first 6 rows of the dataset.

##
#### Data Wrangling

![](img/tidydata.png)

- **In tidy data:**

 - Each variable forms a column
 
 - Each observation forms a row
 
##
#### Summary Statistics of the dataset

::: {.panel-tabset}

### Code

```{r}
#| echo: true
#| code-line-numbers: "1|2"
library(skimr)
output <- skim(iris)
```


### Result

```{r}
print(output)
# - I found this to be very useful when performing EDA but we will explore other options during data viz.
```
:::

##
#### Data Transformation

- There are five key dplyr functions in tidyverse to solve most of data manipulation challenges:

    * Pick observations by their values – `filter()`

    * Reorder (sort) the rows – `arrange()`

    * Pick variables by their names – `select()`

    * Create new variables with functions of existing variables – `mutate()`

    * Collapse many values down to a summary – `summarize()`

##

#### Data Transformation: Filter

- `filter()` allows to subset observations based on their values

- `filter(data, expressions)`

- The first argument is the name of the data frame
The second and subsequent arguments are the expressions that filter the
data frame

- Demonstration on the `filter function`

##

#### Data Transformation: Filter

::: {.panel-tabset}

### Filter 

```{r}
#| echo: true
#| code-line-numbers: "1|2|3"

sorghum <- read.csv(file = here::here('data/sorghum.csv'))

head(sorghum)

```


### Output

```{r}
#| echo: true
#| code-line-numbers: "1|2"

sorghum %>% 
  filter(env=='E1')

```

:::

##
#### Data Transformation: Filter

- What does the following command do?

```{r}
#| echo: true
#| code-line-numbers: "1|3"
sorghum <- read.csv(file = here::here('data/sorghum.csv'))

filter(sorghum, env %in% c('E1','E2'))
```

##

#### Data Transformation: `Filter` Practical `5 minutes`

- import `mtcars.csv` data into RStudio

- `filter` for `mpg<20` and `gear==4`

##

#### Data Transformation: Arrange

- `arrange()` changes the order of the rows (sorting): it takes a data frame and a set of column names to order by

```{r}
#| echo: true
#| code-line-numbers: "1"
head(arrange(mtcars, mpg),10)
```

##

#### Data Transformation: Arrange

We can use the function desc() to re-order by a column in descending
order

```{r}
#| echo: true
#| code-line-numbers: "1"
arrange(mtcars, desc(mpg))

```

##
#### Data Transformation: `Select`

- Select help us to pick variable by their position or name in a `dataframe`.

- We can also used other `select` helpers function like `start_with`, `end_with` and `everything`

```{r}
#| echo: true
#| code-line-numbers: "1|2"
mtcars_demo <- select(mtcars, mpg, cyl, disp)
mtcars_demo
```

##

#### Data Transformation: `Mutate`

- We can add new columns that are functions of existing columns with `mutate()` which always adds new columns at the end of the dataset

```{r}
mtcars %>% 
  mutate(mpg_trans=log10(mpg)) %>% 
  head(10)
```

##

Data Transformation: `Summaries`

- `summarize()` collapses a data frame to a single or few row(s)

```{r}
summarize(mtcars, mpg_mean = mean(mpg, na.rm = TRUE))
```
- `summarize()` is useful with `group_by()`

```{r}
#| echo: true
#| code-line-numbers: "1|2"
by_treatment <- group_by(iris, Species)
summarise(by_treatment, Sepal.Length_mean = mean(Sepal.Length, na.rm = TRUE))
```
##

#### Data Transformation: The pipe `%>%`

```{r}
#| echo: true
#| code-line-numbers: "1|2|3"
iris %>%
group_by(Species) %>%
summarise(mean_Sepal.Length = mean(Sepal.Length, na.rm = TRUE))
```

##

#### Data Transformation: Count
```{r}
#| echo: true
#| code-line-numbers: "1|2|3"
iris %>%
group_by(Species) %>%
summarise(n = n())
```

##

#### Data Wrangling: Practical

- Import `sorghum.xlsx` to R and save to an object
named example03

- How many observations do we have per environment?

- How many `environment?` `genotypes?` Display the list of locations and the list of `genotypes respectively?`

- Display the data where the `yield was less than 150?`

- Select `env`, `gen`, `yield`, to be saved in a new object `example03.short` and create a new variable
`mean_yield` by by computing the mean of the `yield.`

